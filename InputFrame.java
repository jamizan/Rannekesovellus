import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.io.*;
import java.text.SimpleDateFormat;


public class InputFrame extends javax.swing.JFrame {

    /**
     * Creates new form InputFrame
     */
    public InputFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        tfLastName = new javax.swing.JTextField();
        lbInfoTextChild = new javax.swing.JLabel();
        javax.swing.JButton btnChildWristBand = new javax.swing.JButton();
        javax.swing.JButton btnClear = new javax.swing.JButton();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        tfParentPhoneNumber = new javax.swing.JTextField();
        jComboBoxSelectAdultSale = new javax.swing.JComboBox<>();
        javax.swing.JButton btnAdultWristBand = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnPrintBill = new javax.swing.JButton();
        btdeleteSales = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSales = new javax.swing.JTextArea();
        lbSummary = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sovellus");
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(445, 450));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Lapsen etunimi");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Lapsen sukunimi");

        tfFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        tfLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lbInfoTextChild.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnChildWristBand.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChildWristBand.setText("Myy lasten lippu 20€ (sis. alv.)");
        btnChildWristBand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChildWristBandMouseClicked(evt);
            }
        });
        btnChildWristBand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildWristBandActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClear.setText("Tyhjennä");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Huoltajan puhelinnumero");

        tfParentPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jComboBoxSelectAdultSale.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normaali", "Eläkeläinen (-10%)", "Varusmies (-50%)", "Opiskelija (-15%)" }));
        jComboBoxSelectAdultSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectAdultSaleActionPerformed(evt);
            }
        });

        btnAdultWristBand.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdultWristBand.setText("Myy normaali ranneke 22€ (sis. alv.)");
        btnAdultWristBand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdultWristBandMouseClicked(evt);
            }
        });
        btnAdultWristBand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String selectedOption = (String) jComboBoxSelectAdultSale.getSelectedItem();
                processSelectedOption(selectedOption);
                btnAdultWristBandActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Alennusryhmä");

        btnPrintBill.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPrintBill.setText("Tulosta myyntitapahtuman kuitti");
        btnPrintBill.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){
                btnPrintBillActionPerformed(e);
            }
        });

        btdeleteSales.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btdeleteSales.setText("Poista tapahtumat");
        btdeleteSales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btdeleteSalesMouseClicked(evt);
            }
        });
        btdeleteSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdeleteSalesActionPerformed(evt);
            }
        });

        jTextAreaSales.setColumns(20);
        jTextAreaSales.setRows(5);
        jScrollPane1.setViewportView(jTextAreaSales);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPrintBill, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btdeleteSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnAdultWristBand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxSelectAdultSale, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbInfoTextChild, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfParentPhoneNumber)
                    .addComponent(tfLastName)
                    .addComponent(tfFirstName)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChildWristBand)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(lbSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfParentPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChildWristBand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbInfoTextChild, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addComponent(jComboBoxSelectAdultSale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdultWristBand, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btdeleteSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrintBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdultWristBand, btnChildWristBand, btnClear, btnPrintBill});

        pack();
    }// </editor-fold>

//************************************************************************************************************************************** */
//******************************************************************************************************* *******************************/

// Rajattu kohta tunnistaa valinnan ja suorittaa normaalin lipun sekä alennettujen lippujen lisäämisen tiedostoon

    float kokHinta = 0f;
    int id = 0;
    private void processSelectedOption(String selectedOption) {
        // Choice prosessing from the dropdown
        System.out.println("Selected option: " + selectedOption);

            kuitti( selectedOption, null, null, null);
    }

    private void kuitti(String selectedOption, String firstName, String lastName, String phoneNumber){
        float hinta = 0f;
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        String date = dateFormat.format(new Date());
        String time = timeFormat.format(new Date());
        String path = "C:\\Users\\Public\\kuitti"+ id +".txt";
        File file = new File(path);
        String text = "";



        switch (selectedOption) {
            case "Eläkeläinen (-10%)":
                hinta = hinta + 22f * 0.9f;
            text = (
            selectedOption + " " + hinta + "\n" + 
            "------------------------------------------------------------------------------\n"
            );
                break;
            case "Varusmies (-50%)":
                hinta = hinta + 22f * 0.5f; 
            text = (
            selectedOption + " " + hinta + "\n" + 
            "------------------------------------------------------------------------------\n"
            );
                break;
            case "Opiskelija (-15%)":
                hinta = hinta + 22f * 0.85f;
            text = (
            selectedOption + " " + hinta + "\n" + 
            "------------------------------------------------------------------------------\n"
            );
                break;
            case "Lapsi":
                hinta = hinta + 20f;
            text = (
            "Lapsi, nimi: " + firstName + " " + lastName + ", " + "Huoltajan puhelinnumero: " + phoneNumber + " " + hinta + "\n" +
            "------------------------------------------------------------------------------\n"
            );
                break;
            case "loppu":
            text = (
            "Yhteensä: " + kokHinta
            );
            id = id + 1;
            break;
            default:
                hinta = hinta + 22;
            text = (
            selectedOption + " " + hinta + "\n" + 
            "------------------------------------------------------------------------------\n"
            );
                break;
        }
        if (selectedOption != " ") {
            kokHinta = kokHinta + hinta;
        }
        System.out.println(kokHinta);
                try{
            boolean created = file.createNewFile();
            if(created){
                System.out.println("File created");
                FileWriter fw = new FileWriter(path, true);
                fw.write(
                    "------------------------------------------------------------------------------\n" +
                    "Päivämäärä: " + date + "\n" +
                    "Kellonaika: " + time + "\n" +
                    "------------------------------------------------------------------------------\n"
                );
                fw.close();
                } 

            else{
                System.out.println("File already exists");

            }
        } catch(IOException e){
            System.out.println("An error has occurred");
            e.printStackTrace();
        }

        try {
            FileWriter fw = new FileWriter(path, true);
            fw.write(text);
            fw.close();
        }
        catch(IOException e) {
        }
    }



//************************************************************************************************************************************** */
//****************************************************************************************** *********************************************/

//************************************************************************************************************************************** */
//****************************************************************************************** *********************************************/

    // Rajattu alue lisää lasten lipun yksittäiseen kuittiin
    private void btnChildWristBandActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        String firstName = tfFirstName.getText();
        String lastName = tfLastName.getText();
        String phoneNumber = tfParentPhoneNumber.getText();
        lbInfoTextChild.setText("Tallennettu " + firstName + " " + lastName + " " + phoneNumber);
        String selectedOption = ("Lapsi");
        kuitti(selectedOption, firstName, lastName, phoneNumber);
        float hinta = 22f;
        String lastenLippu = "Lapsi";
        
        if (isEmpty(firstName) || isEmpty(lastName) || isEmpty(phoneNumber)) {
            lbInfoTextChild.setText("Virhe, tyhjät kentät!");
        } else {
            lbInfoTextChild.setText("Lipun tiedot: " + firstName + " " + lastName + " " + phoneNumber);
            if (!jTextAreaSales.getText().isEmpty()) {
            jTextAreaSales.setText(jTextAreaSales.getText() + "\n");
        }
            jTextAreaSales.setText(jTextAreaSales.getText() + lastenLippu + ": " + String.format("%.2f", hinta) + " euroa");
        }
    }                         
    
//************************************************************************************************************************************** */
//****************************************************************************************** *********************************************/
                                       
private void btnPrintBillActionPerformed(ActionEvent evt){
    System.out.println("lkadshgf");
    String selectedOption = "loppu";
    kuitti(selectedOption, null, null, null);
}

    private boolean isEmpty(String text) {
        return text == null || text.trim().isEmpty();
    }
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        tfFirstName.setText("");
        tfLastName.setText("");
        tfParentPhoneNumber.setText("");
        lbInfoTextChild.setText("");
    }                                        

    private void btnAdultWristBandActionPerformed(java.awt.event.ActionEvent evt) {                                                  

    }                                                 

    private void jComboBoxSelectAdultSaleActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        
    }                                                        

    private void btdeleteSalesActionPerformed(java.awt.event.ActionEvent evt) {                                              

    }                                             

    private void btdeleteSalesMouseClicked(java.awt.event.MouseEvent evt) {                                           
        jTextAreaSales.setText("");
    }                                          

    private void btnAdultWristBandMouseClicked(java.awt.event.MouseEvent evt) {                                               
        String aikuistenLippu = jComboBoxSelectAdultSale.getSelectedItem() + "";
        float hinta = 0;
            
        if (aikuistenLippu.equals("Normaali"))
        {
            hinta = 22;
            if (!jTextAreaSales.getText().isEmpty()) {
                jTextAreaSales.setText(jTextAreaSales.getText() + "\n");
            }
            jTextAreaSales.setText(jTextAreaSales.getText() + aikuistenLippu + ": " + String.format("%.2f", hinta) + " euroa");
        }
        else if (aikuistenLippu.equals("Eläkeläinen (-10%)"))
        {
            hinta = 22f * 0.9f;
            if (!jTextAreaSales.getText().isEmpty()) {
                jTextAreaSales.setText(jTextAreaSales.getText() + "\n");
            }
            jTextAreaSales.setText(jTextAreaSales.getText() + aikuistenLippu + ": " + String.format("%.2f", hinta) + " euroa");
        }
        else if (aikuistenLippu.equals("Opiskelija (-15%)"))
        {
            hinta = 22f * 0.85f;
            if (!jTextAreaSales.getText().isEmpty()) {
                jTextAreaSales.setText(jTextAreaSales.getText() + "\n");
            }
            jTextAreaSales.setText(jTextAreaSales.getText() + aikuistenLippu + ": " + String.format("%.2f", hinta) + " euroa");
        }
        else if (aikuistenLippu.equals("Varusmies (-50%)"))
        {
            hinta = 22f * 0.5f;
            if (!jTextAreaSales.getText().isEmpty()) {
                jTextAreaSales.setText(jTextAreaSales.getText() + "\n");
            }
            jTextAreaSales.setText(jTextAreaSales.getText() + aikuistenLippu + ": " + String.format("%.2f", hinta) + " euroa");
        }
    }                                              

    private void btnChildWristBandMouseClicked(java.awt.event.MouseEvent evt) {                                               

    }                                              

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btdeleteSales;
    private javax.swing.JButton btnPrintBill;
    private javax.swing.JComboBox<String> jComboBoxSelectAdultSale;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaSales;
    private javax.swing.JLabel lbInfoTextChild;
    private javax.swing.JLabel lbSummary;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfParentPhoneNumber;
    // End of variables declaration                   
}
